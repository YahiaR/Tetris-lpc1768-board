<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Ejercicio4.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Ejercicio4.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Tue May 08 13:59:36 2018
<BR><P>
<H3>Maximum Stack Usage =         96 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SSP1_Send &rArr; SSPx_Send &rArr; GPDMA_ChannelConfigure &rArr; Set_Channel_active_flag
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[4e]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">MemManage_Handler</a><BR>
 <LI><a href="#[8]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">BusFault_Handler</a><BR>
 <LI><a href="#[9]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">UsageFault_Handler</a><BR>
 <LI><a href="#[a]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SVC_Handler</a><BR>
 <LI><a href="#[b]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">DebugMon_Handler</a><BR>
 <LI><a href="#[c]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">PendSV_Handler</a><BR>
 <LI><a href="#[d]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">SysTick_Handler</a><BR>
 <LI><a href="#[24]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[24]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[30]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">DMA_IRQHandler</a> from gpdma_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[20]">EINT0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">EINT3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[3d]">I2C2_Control</a> from i2c_lpc17xx.o(.text) referenced from i2c_lpc17xx.o(.constdata)
 <LI><a href="#[3c]">I2C2_GetDataCount</a> from i2c_lpc17xx.o(.text) referenced from i2c_lpc17xx.o(.constdata)
 <LI><a href="#[3e]">I2C2_GetStatus</a> from i2c_lpc17xx.o(.text) referenced from i2c_lpc17xx.o(.constdata)
 <LI><a href="#[1a]">I2C2_IRQHandler</a> from i2c_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[35]">I2C2_Initialize</a> from i2c_lpc17xx.o(.text) referenced from i2c_lpc17xx.o(.constdata)
 <LI><a href="#[39]">I2C2_MasterReceive</a> from i2c_lpc17xx.o(.text) referenced from i2c_lpc17xx.o(.constdata)
 <LI><a href="#[38]">I2C2_MasterTransmit</a> from i2c_lpc17xx.o(.text) referenced from i2c_lpc17xx.o(.constdata)
 <LI><a href="#[37]">I2C2_PowerControl</a> from i2c_lpc17xx.o(.text) referenced from i2c_lpc17xx.o(.constdata)
 <LI><a href="#[3b]">I2C2_SlaveReceive</a> from i2c_lpc17xx.o(.text) referenced from i2c_lpc17xx.o(.constdata)
 <LI><a href="#[3a]">I2C2_SlaveTransmit</a> from i2c_lpc17xx.o(.text) referenced from i2c_lpc17xx.o(.constdata)
 <LI><a href="#[36]">I2C2_Uninitialize</a> from i2c_lpc17xx.o(.text) referenced from i2c_lpc17xx.o(.constdata)
 <LI><a href="#[34]">I2C_GetCapabilities</a> from i2c_lpc17xx.o(.text) referenced from i2c_lpc17xx.o(.constdata)
 <LI><a href="#[33]">I2C_GetVersion</a> from i2c_lpc17xx.o(.text) referenced from i2c_lpc17xx.o(.constdata)
 <LI><a href="#[29]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2d]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4c]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4a]">SSP1_Control</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[40]">SSP1_GPDMA_Rx_SignalEvent</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[3f]">SSP1_GPDMA_Tx_SignalEvent</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[49]">SSP1_GetDataCount</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[4b]">SSP1_GetStatus</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[1d]">SSP1_IRQHandler</a> from ssp_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[43]">SSP1_Initialize</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[45]">SSP1_PowerControl</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[47]">SSP1_Receive</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[46]">SSP1_Send</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[48]">SSP1_Transfer</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[44]">SSP1_Uninitialize</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[42]">SSP_GetCapabilities</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[41]">SSP_GetVersion</a> from ssp_lpc17xx.o(.text) referenced from ssp_lpc17xx.o(.constdata)
 <LI><a href="#[a]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[31]">SystemInit</a> from system_lpc17xx.o(.text) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[f]">TIMER0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">TIMER1_IRQHandler</a> from ejercicio4.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">UART0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">UART1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2f]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4d]">__main</a> from __main.o(!!!main) referenced from startup_lpc17xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4d]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[51]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[b3]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b4]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[52]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[b5]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[56]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[b6]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[be]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[c0]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[c1]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[c6]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[c7]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[c8]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[c9]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[ca]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[5b]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[cb]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[cc]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[cd]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[ce]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[cf]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[d0]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[d1]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[50]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[d2]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[53]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[55]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[d3]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[57]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; DrawSquare0 &rArr; Buffer_DrawRect0 &rArr; Buffer_SetPixel0
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d4]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[61]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5a]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[d5]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[5c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5e]"></a>delay</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = delay &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_Reset
</UL>

<P><STRONG><a name="[67]"></a>GPIO_PortClock</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gpio_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_Init
</UL>

<P><STRONG><a name="[68]"></a>GPIO_SetDir</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, gpio_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_SetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Control
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPin_JOY
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPin_LED
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_Init
</UL>

<P><STRONG><a name="[6b]"></a>GPIO_PinWrite</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, gpio_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Control
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_Reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_SendData
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_SendCommand
</UL>

<P><STRONG><a name="[80]"></a>GPIO_PinRead</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gpio_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6]"></a>GPIO_PortWrite</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, gpio_lpc17xx.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>GPIO_PortRead</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio_lpc17xx.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))

<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[d8]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[db]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[dc]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[dd]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
</UL>

<P><STRONG><a name="[df]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>I2CACCEL_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, i2c_accel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2CACCEL_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>I2CACCEL_SetRegister</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, i2c_accel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2CACCEL_SetRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CACCEL_Configure
</UL>

<P><STRONG><a name="[65]"></a>I2CACCEL_GetRegister</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, i2c_accel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2CACCEL_GetRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CACCEL_GetValue
</UL>

<P><STRONG><a name="[62]"></a>I2CACCEL_Configure</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, i2c_accel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2CACCEL_Configure &rArr; I2CACCEL_SetRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CACCEL_SetRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>I2CACCEL_GetValue</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, i2c_accel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2CACCEL_GetValue &rArr; I2CACCEL_GetRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CACCEL_GetRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>SPILCD_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, spi_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPILCD_Init &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PortClock
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>SPILCD_SendCommand</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, spi_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SPILCD_SendCommand &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_Transfer
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_Configure
</UL>

<P><STRONG><a name="[6c]"></a>SPILCD_SendData</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, spi_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SPILCD_SendData &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_Transfer
</UL>

<P><STRONG><a name="[6d]"></a>SPILCD_Reset</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, spi_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPILCD_Reset &rArr; delay &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>SPILCD_Configure</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, spi_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SPILCD_Configure &rArr; SPILCD_SendCommand &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>SPILCD_Transfer</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, spi_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SPILCD_Transfer &rArr; SPILCD_SendData &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_SendData
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>initPin_LED</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = initPin_LED &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>initPin_JOY</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = initPin_JOY &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ejercicio4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>ConfiguraTIMER1</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ejercicio4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>Buffer_Reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ejercicio4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>Buffer_SetPixel</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Buffer_SetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_DrawRect
</UL>

<P><STRONG><a name="[72]"></a>Buffer_DrawRect</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Buffer_DrawRect &rArr; Buffer_SetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_SetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSquare
</UL>

<P><STRONG><a name="[74]"></a>DrawSquare</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DrawSquare &rArr; Buffer_DrawRect &rArr; Buffer_SetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>Buffer_GetPixel</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Buffer_GetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_CheckRect
</UL>

<P><STRONG><a name="[75]"></a>Buffer_CheckRect</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Buffer_CheckRect &rArr; Buffer_GetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_GetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSquare
</UL>

<P><STRONG><a name="[77]"></a>CheckSquare</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CheckSquare &rArr; Buffer_CheckRect &rArr; Buffer_GetPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_CheckRect
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>Buffer_SetPixel0</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Buffer_SetPixel0
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_DrawRect0
</UL>

<P><STRONG><a name="[78]"></a>Buffer_DrawRect0</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Buffer_DrawRect0 &rArr; Buffer_SetPixel0
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_SetPixel0
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSquare0
</UL>

<P><STRONG><a name="[7a]"></a>DrawSquare0</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DrawSquare0 &rArr; Buffer_DrawRect0 &rArr; Buffer_SetPixel0
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_DrawRect0
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>ConfiguraPWM</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, ejercicio4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlarPotenciometro
</UL>

<P><STRONG><a name="[7b]"></a>ControlarPotenciometro</STRONG> (Thumb, 96 bytes, Stack size 4 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ControlarPotenciometro
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfiguraPWM
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>main</STRONG> (Thumb, 908 bytes, Stack size 8 bytes, ejercicio4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = main &rArr; DrawSquare0 &rArr; Buffer_DrawRect0 &rArr; Buffer_SetPixel0
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRead
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ControlarPotenciometro
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSquare0
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSquare
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSquare
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Reset
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfiguraTIMER1
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPin_JOY
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPin_LED
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PortClock
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_Transfer
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_Configure
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_Reset
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CACCEL_GetValue
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CACCEL_Configure
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CACCEL_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1a]"></a>I2C2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C2_IRQHandler &rArr; I2Cx_IRQHandler &rArr; I2Cx_SlaveHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>SSPx_GPDMA_Tx_SignalEvent</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_GPDMA_Tx_SignalEvent
</UL>

<P><STRONG><a name="[a6]"></a>SSPx_GPDMA_Rx_SignalEvent</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SSPx_GPDMA_Rx_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_GPDMA_Rx_SignalEvent
</UL>

<P><STRONG><a name="[3f]"></a>SSP1_GPDMA_Tx_SignalEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSP1_GPDMA_Tx_SignalEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_GPDMA_Tx_SignalEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>SSP1_GPDMA_Rx_SignalEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SSP1_GPDMA_Rx_SignalEvent &rArr; SSPx_GPDMA_Rx_SignalEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_GPDMA_Rx_SignalEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[1d]"></a>SSP1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SSP1_IRQHandler &rArr; SSPx_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>GPDMA_Initialize</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, gpdma_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPDMA_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Initialize
</UL>

<P><STRONG><a name="[98]"></a>GPDMA_Uninitialize</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, gpdma_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPDMA_Uninitialize
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Uninitialize
</UL>

<P><STRONG><a name="[96]"></a>GPDMA_PeripheralSelect</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gpdma_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPDMA_PeripheralSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Initialize
</UL>

<P><STRONG><a name="[9d]"></a>GPDMA_ChannelConfigure</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, gpdma_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPDMA_ChannelConfigure &rArr; Set_Channel_active_flag
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Channel_active_flag
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Channel_active_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Transfer
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Receive
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Send
</UL>

<P><STRONG><a name="[ab]"></a>GPDMA_ChannelEnable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gpdma_lpc17xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Channel_active_flag
</UL>

<P><STRONG><a name="[9a]"></a>GPDMA_ChannelDisable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gpdma_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPDMA_ChannelDisable
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Channel_active_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Control
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_PowerControl
</UL>

<P><STRONG><a name="[e0]"></a>GPDMA_ChannelGetStatus</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gpdma_lpc17xx.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>GPDMA_ChannelGetCount</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gpdma_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_GetDataCount
</UL>

<P><STRONG><a name="[28]"></a>DMA_IRQHandler</STRONG> (Thumb, 408 bytes, Stack size 16 bytes, gpdma_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Channel_active_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>PIN_Configure</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, pin_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PIN_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Control
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Uninitialize
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Initialize
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Uninitialize
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Initialize
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPin_JOY
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPin_LED
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPILCD_Init
</UL>

<P><STRONG><a name="[e1]"></a>PIN_ConfigureTPIU</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, pin_lpc17xx.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>PIN_ConfigureI2C0Pins</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, pin_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Control
</UL>

<P><STRONG><a name="[ac]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 408 bytes, Stack size 32 bytes, system_lpc17xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[31]"></a>SystemInit</STRONG> (Thumb, 314 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[ad]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[e2]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Control
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_PowerControl
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Initialize
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Initialize
</UL>

<P><STRONG><a name="[e3]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[af]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[b1]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[b0]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[85]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_SlaveHandler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MasterHandler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Control
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_SlaveReceive
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_SlaveTransmit
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MasterReceive
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MasterTransmit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_PowerControl
</UL>

<P><STRONG><a name="[8d]"></a>GetI2CClockFreq</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetI2CClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Control
</UL>

<P><STRONG><a name="[33]"></a>I2C_GetVersion</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_GetVersion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>I2C_GetCapabilities</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, i2c_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> i2c_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>I2Cx_Initialize</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2Cx_Initialize &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Initialize
</UL>

<P><STRONG><a name="[83]"></a>I2Cx_Uninitialize</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2Cx_Uninitialize &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Uninitialize
</UL>

<P><STRONG><a name="[84]"></a>I2Cx_PowerControl</STRONG> (Thumb, 320 bytes, Stack size 16 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2Cx_PowerControl
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_PowerControl
</UL>

<P><STRONG><a name="[88]"></a>I2Cx_MasterTransmit</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2Cx_MasterTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_MasterTransmit
</UL>

<P><STRONG><a name="[89]"></a>I2Cx_MasterReceive</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2Cx_MasterReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_MasterReceive
</UL>

<P><STRONG><a name="[8a]"></a>I2Cx_SlaveTransmit</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2Cx_SlaveTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_SlaveTransmit
</UL>

<P><STRONG><a name="[8b]"></a>I2Cx_SlaveReceive</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2Cx_SlaveReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_SlaveReceive
</UL>

<P><STRONG><a name="[92]"></a>I2Cx_GetDataCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_GetDataCount
</UL>

<P><STRONG><a name="[8c]"></a>I2Cx_Control</STRONG> (Thumb, 378 bytes, Stack size 32 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = I2Cx_Control &rArr; GetI2CClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_ConfigureI2C0Pins
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetI2CClockFreq
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Control
</UL>

<P><STRONG><a name="[93]"></a>I2Cx_GetStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_GetStatus
</UL>

<P><STRONG><a name="[8f]"></a>I2Cx_MasterHandler</STRONG> (Thumb, 462 bytes, Stack size 16 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2Cx_MasterHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_IRQHandler
</UL>

<P><STRONG><a name="[90]"></a>I2Cx_SlaveHandler</STRONG> (Thumb, 486 bytes, Stack size 16 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2Cx_SlaveHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_IRQHandler
</UL>

<P><STRONG><a name="[91]"></a>I2Cx_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2Cx_IRQHandler &rArr; I2Cx_SlaveHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_SlaveHandler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MasterHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_IRQHandler
</UL>

<P><STRONG><a name="[35]"></a>I2C2_Initialize</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C2_Initialize &rArr; I2Cx_Initialize &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>I2C2_Uninitialize</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C2_Uninitialize &rArr; I2Cx_Uninitialize &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Uninitialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>I2C2_PowerControl</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C2_PowerControl &rArr; I2Cx_PowerControl
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_PowerControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>I2C2_MasterTransmit</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C2_MasterTransmit &rArr; I2Cx_MasterTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MasterTransmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>I2C2_MasterReceive</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C2_MasterReceive &rArr; I2Cx_MasterReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MasterReceive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>I2C2_SlaveTransmit</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C2_SlaveTransmit &rArr; I2Cx_SlaveTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_SlaveTransmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>I2C2_SlaveReceive</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C2_SlaveReceive &rArr; I2Cx_SlaveReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_SlaveReceive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>I2C2_GetDataCount</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C2_GetDataCount
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_GetDataCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>I2C2_Control</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = I2C2_Control &rArr; I2Cx_Control &rArr; GetI2CClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Control
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>I2C2_GetStatus</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C2_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_GetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Control
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_SlaveReceive
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_SlaveTransmit
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MasterReceive
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MasterTransmit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_PowerControl
</UL>

<P><STRONG><a name="[86]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, i2c_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Control
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_PowerControl
</UL>

<P><STRONG><a name="[a3]"></a>GetSSPClockFreq</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetSSPClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Control
</UL>

<P><STRONG><a name="[41]"></a>SSP_GetVersion</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSP_GetVersion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>SSP_GetCapabilities</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>SSPx_Initialize</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SSPx_Initialize &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_PeripheralSelect
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_Initialize
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Initialize
</UL>

<P><STRONG><a name="[97]"></a>SSPx_Uninitialize</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SSPx_Uninitialize &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_Uninitialize
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Uninitialize
</UL>

<P><STRONG><a name="[99]"></a>SSPx_PowerControl</STRONG> (Thumb, 430 bytes, Stack size 16 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SSPx_PowerControl &rArr; GPDMA_ChannelDisable
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_ChannelDisable
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_PowerControl
</UL>

<P><STRONG><a name="[9c]"></a>SSPx_Send</STRONG> (Thumb, 356 bytes, Stack size 32 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SSPx_Send &rArr; GPDMA_ChannelConfigure &rArr; Set_Channel_active_flag
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_ChannelConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Send
</UL>

<P><STRONG><a name="[9e]"></a>SSPx_Receive</STRONG> (Thumb, 344 bytes, Stack size 32 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SSPx_Receive &rArr; GPDMA_ChannelConfigure &rArr; Set_Channel_active_flag
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_ChannelConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Receive
</UL>

<P><STRONG><a name="[9f]"></a>SSPx_Transfer</STRONG> (Thumb, 338 bytes, Stack size 32 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SSPx_Transfer &rArr; GPDMA_ChannelConfigure &rArr; Set_Channel_active_flag
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_ChannelConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Transfer
</UL>

<P><STRONG><a name="[a0]"></a>SSPx_GetDataCount</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SSPx_GetDataCount
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_ChannelGetCount
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_GetDataCount
</UL>

<P><STRONG><a name="[a2]"></a>SSPx_Control</STRONG> (Thumb, 1314 bytes, Stack size 56 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SSPx_Control &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_ChannelDisable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSSPClockFreq
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Control
</UL>

<P><STRONG><a name="[a4]"></a>SSPx_GetStatus</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SSPx_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_GetStatus
</UL>

<P><STRONG><a name="[a7]"></a>SSPx_IRQHandler</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SSPx_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_IRQHandler
</UL>

<P><STRONG><a name="[43]"></a>SSP1_Initialize</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SSP1_Initialize &rArr; SSPx_Initialize &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>SSP1_Uninitialize</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SSP1_Uninitialize &rArr; SSPx_Uninitialize &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Uninitialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>SSP1_PowerControl</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SSP1_PowerControl &rArr; SSPx_PowerControl &rArr; GPDMA_ChannelDisable
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_PowerControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>SSP1_Send</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SSP1_Send &rArr; SSPx_Send &rArr; GPDMA_ChannelConfigure &rArr; Set_Channel_active_flag
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>SSP1_Receive</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SSP1_Receive &rArr; SSPx_Receive &rArr; GPDMA_ChannelConfigure &rArr; Set_Channel_active_flag
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>SSP1_Transfer</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SSP1_Transfer &rArr; SSPx_Transfer &rArr; GPDMA_ChannelConfigure &rArr; Set_Channel_active_flag
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Transfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>SSP1_GetDataCount</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SSP1_GetDataCount &rArr; SSPx_GetDataCount
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_GetDataCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>SSP1_Control</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SSP1_Control &rArr; SSPx_Control &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Control
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>SSP1_GetStatus</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SSP1_GetStatus &rArr; SSPx_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_GetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_PowerControl
</UL>

<P><STRONG><a name="[a9]"></a>Set_Channel_active_flag</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gpdma_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_Channel_active_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_ChannelEnable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_ChannelConfigure
</UL>

<P><STRONG><a name="[a8]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gpdma_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_Uninitialize
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_Initialize
</UL>

<P><STRONG><a name="[aa]"></a>Clear_Channel_active_flag</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gpdma_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_ChannelDisable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPDMA_ChannelConfigure
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
